#!/bin/bash

setup_unikraft()
{
    :
}

setup_musl()
{
    :
}

setup_lwip()
{
    :
}

setup_libcxx()
{
    :
}

setup_libcxxabi()
{
    :
}

setup_libunwind()
{
    :
}

setup_compiler_rt()
{
    :
}

setup_libc_test()
{
    :
}

setup_libsodium()
{
    :
}

setup_zlib()
{
    :
}

setup_libuuid()
{
    :
}

setup_python3()
{
    :
}

setup_nginx()
{
    :
}

setup_micropython()
{
    :
}

setup_gcc()
{
    :
}

setup_libgo()
{
    :
}

setup()
{
    mkdir -p "$top"
    mkdir -p "$libs"
    mkdir -p "$apps"

    if test ! -d "$uk"; then
        git clone https://github.com/unikraft/unikraft "$uk"
        pushd "$uk" > /dev/null
        setup_unikraft
        popd > /dev/null
    fi

    if test ! -d "$libs"/musl; then
        git clone https://github.com/unikraft/lib-musl "$libs"/musl
        pushd "$libs"/musl > /dev/null
        setup_musl
        popd > /dev/null
    fi

    if test ! -d "$libs"/lwip; then
        git clone https://github.com/unikraft/lib-lwip "$libs"/lwip
        pushd "$libs"/lwip > /dev/null
        setup_lwip
        popd > /dev/null
    fi

    if test ! -d "$libs"/libcxx; then
        git clone https://github.com/unikraft/lib-libcxx "$libs"/libcxx
        pushd "$libs"/libcxx > /dev/null
        setup_libcxx
        popd > /dev/null
    fi

    if test ! -d "$libs"/libcxxabi; then
        git clone https://github.com/unikraft/lib-libcxxabi "$libs"/libcxxabi
        pushd "$libs"/libcxxabi > /dev/null
        setup_libcxxabi
        popd > /dev/null
    fi

    if test ! -d "$libs"/libunwind; then
        git clone https://github.com/unikraft/lib-libunwind "$libs"/libunwind
        pushd "$libs"/libunwind > /dev/null
        setup_libunwind
        popd > /dev/null
    fi

    if test ! -d "$libs"/compiler-rt; then
        git clone https://github.com/unikraft/lib-compiler-rt "$libs"/compiler-rt
        pushd "$libs"/compiler-rt > /dev/null
        setup_compiler_rt
        popd > /dev/null
    fi

    if test ! -d "$libs"/libc-test; then
        git clone https://github.com/unikraft/lib-libc-test "$libs"/libc-test
        pushd "$libs"/libc-test > /dev/null
        setup_libc_test
        popd > /dev/null
    fi

    if test ! -d "$libs"/libsodium; then
        git clone https://github.com/unikraft/lib-libsodium "$libs"/libsodium
        pushd "$libs"/libsodium > /dev/null
        setup_libsodium
        popd > /dev/null
    fi

    if test ! -d "$libs"/zlib; then
        git clone https://github.com/unikraft/lib-zlib "$libs"/zlib
        pushd "$libs"/zlib > /dev/null
        setup_zlib
        popd > /dev/null
    fi

    if test ! -d "$libs"/libuuid; then
        git clone https://github.com/unikraft/lib-libuuid "$libs"/libuuid
        pushd "$libs"/libuuid > /dev/null
        setup_libuuid
        popd > /dev/null
    fi

    if test ! -d "$libs"/python3; then
        git clone https://github.com/unikraft/lib-python3 "$libs"/python3
        pushd "$libs"/python3 > /dev/null
        setup_python3
        popd > /dev/null
    fi

    if test ! -d "$libs"/sqlite; then
        git clone https://github.com/unikraft/lib-sqlite "$libs"/sqlite
    fi

    if test ! -d "$libs"/redis; then
        git clone https://github.com/unikraft/lib-redis "$libs"/redis
    fi

    if test ! -d "$libs"/nginx; then
        git clone https://github.com/unikraft/lib-nginx "$libs"/nginx
        pushd "$libs"/nginx > /dev/null
        setup_nginx
        popd > /dev/null
    fi

    if test ! -d "$libs"/micropython; then
        git clone https://github.com/unikraft/lib-micropython "$libs"/micropython
        pushd "$libs"/micropython > /dev/null
        setup_micropython
        popd > /dev/null
    fi

    if test ! -d "$libs"/gcc; then
        git clone https://github.com/unikraft/lib-gcc "$libs"/gcc
        pushd "$libs"/gcc > /dev/null
        setup_gcc
        popd > /dev/null
    fi

    if test ! -d "$libs"/libgo; then
        git clone https://github.com/unikraft/lib-libgo "$libs"/libgo
        pushd "$libs"/libgo > /dev/null
        setup_libgo
        popd > /dev/null
    fi
}

build()
{
    if test ! -d "$app"; then
        echo "$app folder doesn't exist. Did you run '$0 setup'?" 1>&2
        exit 1
    fi
    pushd "$app" > /dev/null
    export UK_WORKDIR=$(pwd)/../../
    git checkout -- kraft.yaml
    kraft configure -F -m x86_64 -p kvm
    git checkout -- kraft.yaml
    kraft prepare
    git checkout -- kraft.yaml
    kraft build -j $(nproc)
    popd > /dev/null
}

clean()
{
    if test ! -d "$app"; then
        echo "$app folder doesn't exist. Did you run '$0 setup'?" 1>&2
        exit 1
    fi
    pushd "$app" > /dev/null
    export UK_WORKDIR=$(pwd)/../../
    kraft clean -d
    git reset --hard HEAD
    popd > /dev/null
}

remove()
{
    rm -fr "$top"
}

_setup_networking()
{
    sudo ip link set dev virbr0 down
    sudo ip link del dev virbr0
    sudo ip link add virbr0 type bridge
    sudo ip address add 172.44.0.1/24 dev virbr0
    sudo ip link set dev virbr0 up
}
